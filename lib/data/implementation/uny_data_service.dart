import 'package:dio/dio.dart';
import 'package:uny/=models=/review.dart';
import 'package:uny/data/implementation/constants.dart';
import 'package:uny/data/i_uny_data_service.dart';

class UnyDataService implements IUnyDataService {
  late final Dio _dio;

  UnyDataService() {
    _dio = Dio(kDioOptions);
  }

  @override
  Future<List<Review>> fetchReviews() async {
    try {
      final response = await _dio.get('/comments');
      final reviewsJsonArr = response.data['data'] as List<dynamic>;
      final reviews = reviewsJsonArr.map((item) => Review.fromJson(item)).toList();
      //#####################################
      // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–∫–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç Google
      final mockGoogleReview = Review(
        id: 777,
        name: 'Google',
        text: '–ê–Ω—Ç–æ–Ω –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–ª –≤ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –æ–∫–æ–ª–æ 7 –ª–µ—Ç, –Ω–∞—á–∏–Ω–∞—è, –∫–∞–∫ –¥–∂—É–Ω–∏–æ—Ä! '
            '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –ø–æ–¥–∞—Ä–∏–≤—à–∏–π –º–∏—Ä—É 2 –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞ üòé',
        createdAt: DateTime.parse('2025-12-12'),
        updatedAt: DateTime.parse('2025-12-12'),
      );
      reviews.add(mockGoogleReview);
      //#####################################
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏,
      // —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ—Ü–µ—Å—Å–∞ :)
      await Future.delayed(const Duration(milliseconds: 2500));

      return reviews;
    } on DioError catch (e) {
      return Future.error(e.toString());
    } catch (e) {
      return Future.error('Service error');
    }
  }
}
